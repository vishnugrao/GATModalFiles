digraph "SVFG" {
	label="SVFG";

	Node0x6000039cc120 [shape=record,color=grey,label="{NullPtrVFGNode ID: 0 PAGNode ID: 0\n}"];
	Node0x6000039cc120 -> Node0x6000039cc870[style=solid];
	Node0x6000039cc090 [shape=record,color=green,label="{AddrVFGNode ID: 1 AddrStmt: [Var4 \<-- Var3]  \nGlobalValVar ID: 4\n @.str = private unnamed_addr constant [32 x i8] c\"0123456789abcdef0123456789abcde\\00\", align 1 \{ Glob  \}}"];
	Node0x6000039cc090 -> Node0x6000039cc900[style=solid];
	Node0x6000039cc090 -> Node0x6000039cd170[style=solid];
	Node0x6000039cc090 -> Node0x6000039cd440[style=solid];
	Node0x6000039cc5a0 [shape=record,color=green,label="{AddrVFGNode ID: 10 AddrStmt: [Var8 \<-- Var9]  \nValVar ID: 8\n   %1 = alloca i32, align 4 }"];
	Node0x6000039cc5a0 -> Node0x6000039cd0e0[style=solid];
	Node0x6000039cc6c0 [shape=record,color=green,label="{AddrVFGNode ID: 11 AddrStmt: [Var11 \<-- Var12]  \nValVar ID: 11\n   %2 = alloca %struct._charVoid, align 8 }"];
	Node0x6000039cc6c0 -> Node0x6000039cc990[style=solid];
	Node0x6000039cc6c0 -> Node0x6000039cca20[style=solid];
	Node0x6000039cc6c0 -> Node0x6000039ccab0[style=solid];
	Node0x6000039cc6c0 -> Node0x6000039ccb40[style=solid];
	Node0x6000039cc6c0 -> Node0x6000039ccbd0[style=solid];
	Node0x6000039cc6c0 -> Node0x6000039ccc60[style=solid];
	Node0x6000039cc870 [shape=record,color=black,label="{CopyVFGNode ID: 14 CopyStmt: [Var1 \<-- Var0]  \nConstNullPtrValVar ID: 0\n ptr null \{ constant data \}}"];
	Node0x6000039cc900 [shape=record,color=purple,label="{GepVFGNode ID: 15 GepStmt: [Var51 \<-- Var4]  \nValVar ID: 25\n   call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 1 @.str, i64 32, i1 false) }"];
	Node0x6000039cc900 -> Node0x6000039cd050[style=solid];
	Node0x6000039cc990 [shape=record,color=purple,label="{GepVFGNode ID: 16 GepStmt: [Var15 \<-- Var11]  \nValVar ID: 15\n   %3 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 1 }"];
	Node0x6000039cc990 -> Node0x6000039cd170[style=solid];
	Node0x6000039cca20 [shape=record,color=purple,label="{GepVFGNode ID: 17 GepStmt: [Var17 \<-- Var11]  \nValVar ID: 17\n   %4 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 1 }"];
	Node0x6000039cca20 -> Node0x6000039ccf30[style=solid];
	Node0x6000039ccab0 [shape=record,color=purple,label="{GepVFGNode ID: 18 GepStmt: [Var22 \<-- Var11]  \nValVar ID: 22\n   %7 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 0 }"];
	Node0x6000039ccab0 -> Node0x6000039cccf0[style=solid];
	Node0x6000039ccb40 [shape=record,color=purple,label="{GepVFGNode ID: 19 GepStmt: [Var30 \<-- Var11]  \nValVar ID: 30\n   %9 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 0 }"];
	Node0x6000039ccb40 -> Node0x6000039cce10[style=solid];
	Node0x6000039ccbd0 [shape=record,color=purple,label="{GepVFGNode ID: 20 GepStmt: [Var35 \<-- Var11]  \nValVar ID: 35\n   %11 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 0 }"];
	Node0x6000039ccbd0 -> Node0x6000039ccea0[style=solid];
	Node0x6000039ccc60 [shape=record,color=purple,label="{GepVFGNode ID: 21 GepStmt: [Var38 \<-- Var11]  \nValVar ID: 38\n   %14 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 1 }"];
	Node0x6000039ccc60 -> Node0x6000039ccfc0[style=solid];
	Node0x6000039cccf0 [shape=record,color=purple,label="{GepVFGNode ID: 22 GepStmt: [Var23 \<-- Var22]  \nValVar ID: 23\n   %8 = getelementptr inbounds [16 x i8], ptr %7, i64 0, i64 0 }"];
	Node0x6000039cccf0 -> Node0x6000039ccd80[style=solid];
	Node0x6000039cccf0 -> Node0x6000039cd3b0[style=solid];
	Node0x6000039ccd80 [shape=record,color=purple,label="{GepVFGNode ID: 23 GepStmt: [Var50 \<-- Var23]  \nValVar ID: 25\n   call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 1 @.str, i64 32, i1 false) }"];
	Node0x6000039ccd80 -> Node0x6000039cd200[style=solid];
	Node0x6000039cce10 [shape=record,color=purple,label="{GepVFGNode ID: 24 GepStmt: [Var31 \<-- Var30]  \nValVar ID: 31\n   %10 = getelementptr inbounds [16 x i8], ptr %9, i64 0, i64 15 }"];
	Node0x6000039cce10 -> Node0x6000039cd290[style=solid];
	Node0x6000039ccea0 [shape=record,color=purple,label="{GepVFGNode ID: 25 GepStmt: [Var36 \<-- Var35]  \nValVar ID: 36\n   %12 = getelementptr inbounds [16 x i8], ptr %11, i64 0, i64 0 }"];
	Node0x6000039ccea0 -> Node0x6000039cd320[style=solid];
	Node0x6000039ccf30 [shape=record,color=red,label="{LoadVFGNode ID: 26 LoadStmt: [Var18 \<-- Var17]  \nValVar ID: 18\n   %5 = load ptr, ptr %4, align 8 }"];
	Node0x6000039ccf30 -> Node0x6000039cd680[style=solid];
	Node0x6000039ccfc0 [shape=record,color=red,label="{LoadVFGNode ID: 27 LoadStmt: [Var39 \<-- Var38]  \nValVar ID: 39\n   %15 = load ptr, ptr %14, align 8 }"];
	Node0x6000039ccfc0 -> Node0x6000039cd5f0[style=solid];
	Node0x6000039cd050 [shape=record,color=red,label="{LoadVFGNode ID: 28 LoadStmt: [Var52 \<-- Var51]  \nValVar ID: 25\n   call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 1 @.str, i64 32, i1 false) }"];
	Node0x6000039cd050 -> Node0x6000039cd200[style=solid];
	Node0x6000039cd0e0 [shape=record,color=blue,label="{StoreVFGNode ID: 29 StoreStmt: [Var8 \<-- Var14]  \nValVar ID: 13\n   store i32 0, ptr %1, align 4 }"];
	Node0x6000039cd0e0 -> Node0x600003ccc420[style=dashed];
	Node0x6000039cd170 [shape=record,color=blue,label="{StoreVFGNode ID: 30 StoreStmt: [Var15 \<-- Var4]  \nValVar ID: 16\n   store ptr @.str, ptr %3, align 8 }"];
	Node0x6000039cd170 -> Node0x6000039ccf30[style=dashed];
	Node0x6000039cd170 -> Node0x6000039ccfc0[style=dashed];
	Node0x6000039cd170 -> Node0x600003ccc2c0[style=dashed];
	Node0x6000039cd200 [shape=record,color=blue,label="{StoreVFGNode ID: 31 StoreStmt: [Var50 \<-- Var52]  \nValVar ID: 25\n   call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 1 @.str, i64 32, i1 false) }"];
	Node0x6000039cd200 -> Node0x6000039cd290[style=dashed];
	Node0x6000039cd290 [shape=record,color=blue,label="{StoreVFGNode ID: 32 StoreStmt: [Var31 \<-- Var34]  \nValVar ID: 33\n   store i8 0, ptr %10, align 1 }"];
	Node0x6000039cd290 -> Node0x600003ccc370[style=dashed];
	Node0x6000039cd320 [shape=record,color=yellow,penwidth=2,label="{ActualParmVFGNode ID: 33 CS[CallICFGNode: ]ValVar ID: 36\n   %12 = getelementptr inbounds [16 x i8], ptr %11, i64 0, i64 0 }"];
	Node0x6000039cd3b0 [shape=record,color=yellow,penwidth=2,label="{ActualParmVFGNode ID: 34 CS[CallICFGNode: ]ValVar ID: 23\n   %8 = getelementptr inbounds [16 x i8], ptr %7, i64 0, i64 0 }"];
	Node0x6000039cd440 [shape=record,color=yellow,penwidth=2,label="{ActualParmVFGNode ID: 35 CS[CallICFGNode: ]GlobalValVar ID: 4\n @.str = private unnamed_addr constant [32 x i8] c\"0123456789abcdef0123456789abcde\\00\", align 1 \{ Glob  \}}"];
	Node0x6000039cd5f0 [shape=record,color=yellow,penwidth=2,label="{ActualParmVFGNode ID: 38 CS[CallICFGNode: ]ValVar ID: 39\n   %15 = load ptr, ptr %14, align 8 }"];
	Node0x6000039cd680 [shape=record,color=yellow,penwidth=2,label="{ActualParmVFGNode ID: 39 CS[CallICFGNode: ]ValVar ID: 18\n   %5 = load ptr, ptr %4, align 8 }"];
	Node0x600003ecc600 [shape=record,color=yellow,penwidth=2,label="{FormalRetVFGNode ID: 43 Fun[main]RetValPN ID: 7 unique return node for function main}"];
	Node0x6000032cc380 [shape=record,color=black,label="{IntraPHIVFGNode ID: 44 PAGNode: [7 = PHI(14, )]    ; Function Attrs: noinline nounwind optnone ssp uwtable(sync)\ndefine i32 @main() #0 \{\n  %1 = alloca i32, align 4\n  %2 = alloca %struct._charVoid, align 8\n  store i32 0, ptr %1, align 4\n  %3 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 1\n  store ptr @.str, ptr %3, align 8\n  %4 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 1\n  %5 = load ptr, ptr %4, align 8\n  %6 = call i32 @puts(ptr noundef %5)\n  %7 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 0\n  %8 = getelementptr inbounds [16 x i8], ptr %7, i64 0, i64 0\n  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 1 @.str, i64 32, i1 false)\n  %9 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 0\n  %10 = getelementptr inbounds [16 x i8], ptr %9, i64 0, i64 15\n  store i8 0, ptr %10, align 1\n  %11 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 0\n  %12 = getelementptr inbounds [16 x i8], ptr %11, i64 0, i64 0\n  %13 = call i32 @puts(ptr noundef %12)\n  %14 = getelementptr inbounds %struct._charVoid, ptr %2, i32 0, i32 1\n  %15 = load ptr, ptr %14, align 8\n  %16 = call i32 @puts(ptr noundef %15)\n  ret i32 0\n\}\n }"];
	Node0x6000032cc380 -> Node0x600003ecc600[style=solid];
	Node0x600003ccc000 [shape=record,color=yellow,penwidth=2,label="{FormalINSVFGNode ID: 45 \{fun: main\}8V_1 = ENCHI(MR_8V_1)\npts\{54 \}\n}"];
	Node0x600003ccc000 -> Node0x6000039cd200[style=dashed];
	Node0x600003ccc0b0 [shape=record,color=yellow,penwidth=2,label="{FormalINSVFGNode ID: 46 \{fun: main\}6V_1 = ENCHI(MR_6V_1)\npts\{53 \}\n}"];
	Node0x600003ccc0b0 -> Node0x6000039cd170[style=dashed];
	Node0x600003ccc160 [shape=record,color=yellow,penwidth=2,label="{FormalINSVFGNode ID: 47 \{fun: main\}4V_1 = ENCHI(MR_4V_1)\npts\{9 \}\n}"];
	Node0x600003ccc160 -> Node0x6000039cd0e0[style=dashed];
	Node0x600003ccc210 [shape=record,color=yellow,penwidth=2,label="{FormalINSVFGNode ID: 48 \{fun: main\}2V_1 = ENCHI(MR_2V_1)\npts\{3 \}\n}"];
	Node0x600003ccc210 -> Node0x6000039cd050[style=dashed];
	Node0x600003ccc210 -> Node0x600003ccc4d0[style=dashed];
	Node0x600003ccc2c0 [shape=record,color=yellow,penwidth=2,label="{FormalOUTSVFGNode ID: 49 \{fun: main\}RETMU(6V_2)\npts\{53 \}\n}"];
	Node0x600003ccc370 [shape=record,color=yellow,penwidth=2,label="{FormalOUTSVFGNode ID: 50 \{fun: main\}RETMU(8V_3)\npts\{54 \}\n}"];
	Node0x600003ccc420 [shape=record,color=yellow,penwidth=2,label="{FormalOUTSVFGNode ID: 51 \{fun: main\}RETMU(4V_2)\npts\{9 \}\n}"];
	Node0x600003ccc4d0 [shape=record,color=yellow,penwidth=2,label="{FormalOUTSVFGNode ID: 52 \{fun: main\}RETMU(2V_1)\npts\{3 \}\n}"];
}
